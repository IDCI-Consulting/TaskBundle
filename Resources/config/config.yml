old_sound_rabbit_mq:
    connections:
        default:
            host:     "%task_rabbitmq_host%"
            port:     "%task_rabbitmq_port%"
            user:     "%task_rabbitmq_user%"
            password: "%task_rabbitmq_password%"
            vhost:    "/"
            lazy:     "%task_rabbitmq_lazy%"
    producers:
        action:
            connection:       "default"
            exchange_options: {name: "action_exchange", type: "direct"}
        extract_rule:
            connection:       "default"
            exchange_options: {name: "extract_rule_exchange", type: "direct"}
        task:
            connection:       "default"
            exchange_options: {name: "task_exchange", type: "direct"}

    consumers:
        action:
            connection:       "default"
            exchange_options: {name: "action_exchange", type: "direct"}
            queue_options:
                name: "%application_name%-action_queue"
                routing_keys:
                    - '%application_name%'
            callback:         "idci_task.service.consumer.action"
            qos_options:      {prefetch_size: 0; prefetch_count: 1, global: false}
        extract_rule:
            connection:       "default"
            exchange_options: {name: "extract_rule_exchange", type: "direct"}
            queue_options:
                name: "%application_name%-extract_rule_queue"
                routing_keys:
                    - '%application_name%'
            callback:         "idci_task.service.consumer.extract_rule"
            qos_options:      {prefetch_size: 0; prefetch_count: 1, global: false}
        task:
            connection:       "default"
            exchange_options: {name: "task_exchange", type: "direct"}
            queue_options:
                name: "%application_name%-task_queue"
                routing_keys:
                    - '%application_name%'
            callback:         "idci_task.service.consumer.task"
            qos_options:      {prefetch_size: 0; prefetch_count: 1, global: false}

doctrine_mongodb:
    default_database: %task_mongo_database_name%
    connections:
        task:
            server: %task_mongo_database_host%
            options: {}
        log:
            server: %task_mongo_database_host%
            options: {}
    document_managers:
        task:
            mappings:
                IDCITaskBundle: ~
            metadata_cache_driver: array
        log:
            auto_mapping: false
            logging: false

monolog:
  channels: ['idci_task.action']
  handlers:
      mongo:
          type: mongo
          level: info
          channels: ['idci_task.action']
          mongo:
              id: mongolog
              database: %task_mongo_database_name%
              collection: task_logs
